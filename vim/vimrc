"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" use vundle to manage bundles
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set nocompatible
filetype off
set rtp+=~/.vim/bundle/Vundle.vim

call vundle#begin()

" general
Plugin 'gmarik/Vundle.vim'
Plugin 'taglist.vim'
Plugin 'bufexplorer.zip'
Plugin 'winmanager'

" for php
Plugin 'php.vim'
Plugin 'phpcomplete.vim'

" for html
Plugin 'html5.vim'

" for javascript
Plugin 'javascript.vim'
Plugin 'jQuery'

" others
Plugin 'AutoClose'
Plugin 'Tagbar'
Plugin 'neocomplcache'

call vundle#end()


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" general settings
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set bs=indent,eol,start	" allow backspacing over everything in insert mode
set history=100			" keep 100 lines of command line history
set ruler				" show the cursor position all the time
set ar					" auto read when file is changed from outside
set nu					" show line numbers

filetype on				" Enable filetype detection
filetype indent on		" Enable filetype-specific indenting
filetype plugin on		" Enable filetype-specific plugins

" auto reload vimrc when editing it
autocmd! bufwritepost .vimrc source ~/.vimrc

syntax on				" syntax highlight
set hlsearch				" search highlighting

set clipboard=unnamed	" yank to the system register (*) by default
set showmatch			" Cursor shows matching ) and }
set showmode			" Show current mode
set wildchar=<TAB>		" start wild expansion in the command line using <TAB>
set wildmenu			" wild char completion menu

" ignore these files while expanding wild chars
set wildignore+=.svn,CVS,.git 
set wildignore+=*.o,*.a,*.class,*.mo,*.la,*.so,*.lo,*.la,*.obj,*.pyc
set wildignore+=*.exe,*.zip,*.jpg,*.png,*.gif,*.jpeg 

set autoindent				" auto indentation
set incsearch				" incremental search
set copyindent				" copy the previous indentation on autoindenting
set ignorecase				" ignore case when searching
set smartcase				" ignore case if search pattern is all lowercase,case-sensitive otherwise
set nosmarttab				" insert tabs on the start of a line according to context

" disable sound on errors
set noerrorbells visualbell t_vb=
set tm=500

" tab setting
set noexpandtab			"DO-NOT replace <TAB> with spaces
set tabstop=4
set softtabstop=4
set shiftwidth=4
autocmd FileType yaml set expandtab

" folding
set foldenable
set foldmethod=marker
set foldlevel=0
set foldcolumn=0

" always show the status line
set laststatus=2

" format the status line
set statusline=\ %{HasPaste()}%F%m%r%h\ %w\ \ CWD:\ %r%{getcwd()}%h\ \ \Line:\ %l

" C/C++ specific settings
autocmd FileType c,cpp,cc  set cindent		" comments=sr:/*,mb:*,el:*/,:// cino=>s,e0,n0,f0,{0,}0,^-1s,:0,=s,g0,h1s,p2,t0,+2,(2,)20,*30

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" font setting
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
if has("gui_gtk2")
    set guifont=DejaVu\ Sans\ Mono\ 11
elseif has("gui_macvim")
	set guifont=DejaVu_Sans_Mono:h11
elseif has("gui_win32")
	set guifont=DejaVu_Sans_Mono:h11
end

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" useful shortcuts
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let mapleader=""
let g:mapleader=""

" quick alias to leave vim
nmap <leader>w :x<CR> 
nmap <leader>q :q!<CR>

" replace the current word in all opened buffers
map <leader>r :call Replace()<CR>

" move to splitted windok
map <leader>h :wincmd h<CR> 
map <leader>j :wincmd j<CR> 
map <leader>k :wincmd k<CR> 
map <leader>l :wincmd l<CR> 

" quickly resize windows use +/-
map - <C-W>-
map + <C-W>+
map > <C-W>>
map < <C-W><

" allows all window commands in insert mode
imap <C-w> <C-o><C-w>

" loop to switch windows
nmap <S-w> :wincmd w<CR>

" new tab
map <C-t><C-t> :tabnew .<CR>
" close tab
map <C-t><C-w> :tabclose<CR> 

" ;/ turn off search highlighting
nmap <leader>/ :set hls!<CR>
nnoremap <silent><leader>s :nohlsearch<CR>

" :cd. change working directory to that of the current file
cmap cd. lcd %:p:h


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" for PHP programming
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
autocmd FileType php set makeprg=php\ -l\ %
autocmd FileType php set errorformat=%m\ in\ %f\ on\ line\ %l


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" for edit css
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
autocmd FileType css setlocal expandtab shiftwidth=4 tabstop=4 softtabstop=4
" make CSS omnicompletion work for SASS and SCSS
autocmd BufNewFile,BufRead *.scss			set ft=scss.css
autocmd BufNewFile,BufRead *.sass			set ft=sass.css


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" for edit html
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
autocmd FileType html,xhtml setlocal expandtab shiftwidth=4 tabstop=4 softtabstop=4


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" encoding settings
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set encoding=utf-8                                  
set termencoding=utf-8
set fileencoding=utf-8
set fileencodings=ucs-bom,utf-8,gbk,big5,latin1


""""""""""""""""""""""""""""""
" using Tag list (ctags)
""""""""""""""""""""""""""""""
let Tlist_Ctags_Cmd='/usr/bin/ctags'
let Tlist_Show_One_File=1
let Tlist_Exit_OnlyWindow=1
nmap <silent> <leader>tl :TlistToggle<cr>


""""""""""""""""""""""""""""""
" using BufExplorer
""""""""""""""""""""""""""""""
let g:bufExplorerDefaultHelp=0
let g:bufExplorerShowRelativePath=1
let g:bufExplorerSortBy='mru'
let g:bufExplorerSplitRight=0
let g:bufExplorerSplitVertical=1
let g:bufExplorerSplitVertSize=30
let g:bufExplorerUseCurrentWindow=1
autocmd BufWinEnter \[Buf\ List\] setl nonumber


""""""""""""""""""""""""""""""
" using winManager
""""""""""""""""""""""""""""""
let g:winManagerWindowLayout="FileExplorer,BufExplorer|TagList"
let g:winManagerWidth=30
let g:defaultExplorer=0
nmap <C-W><C-F> :FirstExplorerWindow<cr>
nmap <C-W><C-B> :BottomExplorerWindow<cr>
map <silent> <F9> :WMToggle<cr>


""""""""""""""""""""""""""""""
" using php-cs-fixer
""""""""""""""""""""""""""""""
nnoremap <silent><leader>pcd :call PhpCsFixerFixDirectory()<CR>
nnoremap <silent><leader>pcf :call PhpCsFixerFixFile()<CR>


""""""""""""""""""""""""""""""
" helper functions
""""""""""""""""""""""""""""""
fun! HasPaste()
	if &paste
		return '[PASTE]'
	else
		return ''
	endif
endfun

fun! IncludeGuard()
	let basename = substitute(bufname(""), '.*/', '', '')
	let guard = '_' . substitute(toupper(basename), '\.', '_', "H") . '_'
	call append(0, "#ifndef " . guard)
	call append(1, "#define " . guard)
	call append(line("$"), "#endif /* " . guard . " */")
endfun

fun! Replace() 
	let s:word = input("Replace " . expand('<cword>') . " with:") 
	:exe 'bufdo! %s/\<' . expand('<cword>') . '\>/' . s:word . '/ge' 
	:unlet! s:word 
endfun 
